{"version":3,"sources":["components/App/App.styled.jsx","components/Form/ContactForm.styled.jsx","components/Form/ContactForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["Title","styled","h1","SubTitle","h2","Container","div","Form","form","Label","label","Input","input","ButtomSubmit","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","onChangeInput","event","target","value","reset","preventDefault","console","log","type","pattern","title","required","onChange","ContactsList","ul","ContactItem","li","DeleteButton","ContactsListSection","contacts","onDeleteContact","map","contact","onClick","id","Filter","App","JSON","parse","window","localStorage","getItem","contactsData","setContacts","filter","useEffect","setItem","stringify","filterContacts","normalizedFilter","toLowerCase","includes","getFilterContacts","newContact","shortid","generate","some","toast","error","prevState","ReactDOM","render","document","getElementById"],"mappings":"iiBAEaA,EAAQC,IAAOC,GAAV,8NAWLC,EAAWF,IAAOG,GAAV,6NAWRC,EAAYJ,IAAOK,IAAV,8JCtBTC,EAAON,IAAOO,KAAV,8IASJC,EAAQR,IAAOS,MAAV,oLAQLC,EAAQV,IAAOW,MAAV,uVAiBLC,EAAeZ,IAAOa,OAAV,2gB,uBC3BV,SAASC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,SACpC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAgB,SAACC,GACpB,MAAsBA,EAAMC,OAArBC,EAAP,EAAOA,MAEP,OAFA,EAAcP,MAGZ,IAAK,OACLC,EAAQM,GAEN,MAEA,IAAK,SACLJ,EAAUI,GAEV,MAEF,QACE,OAAO,OAcNC,EAAQ,WACbP,EAAQ,IACRE,EAAU,KAGZ,OACG,eAACd,EAAD,CAAMS,SAfe,SAACO,GACvBA,EAAMI,iBACNC,QAAQC,IAAIX,GAEZF,EAASE,EAAME,GAEfM,KASC,UACG,eAACjB,EAAD,WACE,cAAC,IAAD,IADF,QAEE,cAACE,EAAD,CACEmB,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUZ,EACVG,MAAOP,OAGX,eAACT,EAAD,WACE,cAAC,IAAD,IADF,UAEE,cAACE,EAAD,CACEmB,KAAK,MACLZ,KAAK,SACLa,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUZ,EACVG,MAAOL,OAGX,cAACP,EAAD,CAAciB,KAAK,SAASL,MAAM,cAAlC,4BCvED,I,IAAMU,EAAelC,IAAOmC,GAAV,0BAEZC,EAAcpC,IAAOqC,GAAV,mMASXC,EAAetC,IAAOa,OAAV,2kB,QCTV,SAAS0B,EAAT,GAA6D,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBACtD,OACE,cAACP,EAAD,UACGM,EAASE,KAAI,SAACC,GAAD,OACZ,eAACP,EAAD,WACE,cAAC,IAAD,IADF,IACqBO,EAAQ1B,KAD7B,KACqC0B,EAAQxB,OAC3C,cAACmB,EAAD,CAAcT,KAAK,SAASe,QAAS,kBAAMH,EAAgBE,EAAQE,KAAnE,SACE,cAAC,IAAD,QAHcF,EAAQE,SCN3B,IAAMrC,EAAQR,IAAOS,MAAV,+QAcLC,EAAQV,IAAOW,MAAV,yZ,QCbH,SAASmC,EAAT,GAAsC,IAApBtB,EAAmB,EAAnBA,MAAOS,EAAY,EAAZA,SACtC,OACE,eAAC,EAAD,WACE,cAAC,IAAD,IADF,yBAEE,cAAC,EAAD,CAAOhB,KAAK,SAASgB,SAAUA,EAAUT,MAAOA,O,2CCIvC,SAASuB,IACtB,MAAgC/B,oBAC9B,kCAAMgC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA7C,QAA6DC,KAD/D,mBAAOb,EAAP,KAAiBc,EAAjB,KAGA,EAA4BtC,mBAAS,IAArC,mBAAOuC,EAAP,UA4CAC,qBAAU,WACRL,aAAaM,QAAQ,WAAYT,KAAKU,UAAUlB,MAC/C,CAACA,IAEJ,IAAMmB,EAtBoB,WACxB,IAAMC,EAAmBL,EAAOM,cAEhC,OAAOrB,EAASe,QAAO,SAACZ,GAAD,OACrBA,EAAQ1B,KAAK4C,cAAcC,SAASF,MAkBjBG,GAEvB,OACE,eAAC3D,EAAD,WACE,cAACL,EAAD,wBAEA,cAACe,EAAD,CAAaC,SApDQ,SAACE,EAAME,GAC9B,IAAM6C,EAAa,CACjBnB,GAAIoB,IAAQC,WACZjD,KAAMA,EACNE,OAAQA,GAGNqB,EAAS2B,MAAK,SAACxB,GAAD,OAAaA,EAAQ1B,OAASA,KAC9CmD,IAAMC,MAAN,UAAepD,EAAf,2BAIFqC,GAAY,SAACgB,GAAD,OAAgBN,GAAhB,mBAA+BM,UA0CzC,cAACpE,EAAD,uBAEA,cAAC4C,EAAD,CAAQtB,MAAO+B,EAAQtB,SAzCJ,SAACX,GACtB,IAAME,EAAQF,EAAMC,OAAOC,MAC3B8B,EAAY9B,MAyCV,cAACe,EAAD,CACEC,SAAUmB,EACVlB,gBAxCgB,SAACI,GACrBS,GAAY,SAACgB,GAAD,OAAeA,EAAUf,QAAO,SAACZ,GAAD,OAAaA,EAAQE,KAAOA,WA0CtE,cAAC,IAAD,OCpEN0B,IAASC,OAAO,cAACzB,EAAD,IAAS0B,SAASC,eAAe,W","file":"static/js/main.e54d5379.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: 1000;\r\n  font-size: 45px;\r\n  line-height: 1.19;\r\n  text-align: center;\r\n  letter-spacing: 0.03em;\r\n\r\n  font-family: 'Comfortaa', cursive;\r\n  font-weight: 500;\r\n  color: #f137a6;\r\n`\r\nexport const SubTitle = styled.h2`\r\n  font-weight: 800;\r\n  font-size: 30px;\r\n  line-height: 1.19;\r\n  text-align: center;\r\n  letter-spacing: 0.03em;\r\n\r\n  font-family: 'Comfortaa', cursive;\r\n  font-weight: 300;\r\n  color: #f137a6;\r\n`\r\nexport const Container = styled.div`\r\n  width: 450px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  text-align: left;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n`\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Form = styled.form`\r\n  & input {\r\n    display: block;\r\n    margin-bottom: 12px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`\r\n\r\nexport const Label = styled.label`\r\n  font-family: 'Comfortaa', cursive;\r\n  font-size: 18px;\r\n  color: #f137a6;\r\n  margin-right: 10px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0);\r\n`\r\n\r\nexport const Input = styled.input`\r\n  width: 400px;\r\n  padding: 15px;\r\n  border: 2px solid #eee;\r\n  border: 0;\r\n  border-bottom: 1px solid #eee;\r\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\r\n  border-radius: 10px;\r\n  margin-top: 10px;\r\n\r\n  &:focus {\r\n    border: 1px solid #f137a6;\r\n    box-shadow: 0 0 20px 4px #f137a6;\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const ButtomSubmit = styled.button`\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  padding: 15px 30px;\r\n  margin: 10px 50px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 40px 40px #f137a6 inset, 0 0 0 0 #f137a6;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-weight: bold;\r\n  letter-spacing: 2px;\r\n  color: white;\r\n  transition: 0.15s ease-in-out;\r\n\r\n  border: none;\r\n\r\n  margin-left: 32%;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 10px 0 #f137a6 inset, 0 0 10px 4px #f137a6;\r\n    color: #f137a6;\r\n    background: #a4dada;\r\n  }\r\n`\r\n","import { Form, Label, Input, ButtomSubmit } from './ContactForm.styled'\r\nimport { BsFillPersonFill } from 'react-icons/bs'\r\nimport { AiFillPhone } from 'react-icons/ai'\r\n\r\nimport React, { useState } from 'react'\r\n\r\n\r\n\r\n\r\nexport default function ContactForm({onSubmit}) {\r\n const [name, setName] = useState('');\r\n const [number, setNumber] = useState('');\r\n\r\n const onChangeInput = (event) => {\r\n    const {value, name} = event.target\r\n\r\n    switch (name) {\r\n      case 'name':\r\n      setName(value)\r\n        \r\n        break;\r\n\r\n        case 'number':\r\n        setNumber(value)\r\n\r\n        break;\r\n    \r\n      default :\r\n        return null;\r\n    }\r\n    \r\n  }\r\n\r\n   const onSubmitButton = (event) => {\r\n    event.preventDefault()\r\n    console.log(name)\r\n\r\n    onSubmit(name, number)\r\n\r\n    reset()\r\n  }\r\n\r\n   const reset = () => {\r\n    setName('');\r\n    setNumber(\"\");\r\n  }\r\n\r\n  return (\r\n     <Form onSubmit={onSubmitButton}>\r\n        <Label>\r\n          <BsFillPersonFill /> Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={onChangeInput}\r\n            value={name}\r\n          />\r\n        </Label>\r\n        <Label>\r\n          <AiFillPhone /> Number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={onChangeInput}\r\n            value={number}\r\n          />\r\n        </Label>\r\n        <ButtomSubmit type=\"submit\" value=\"Add contact\">\r\n          Add contact\r\n        </ButtomSubmit>\r\n      </Form>\r\n  )\r\n}\r\n\r\n\r\n\r\n","import styled from '@emotion/styled'\r\n\r\nexport const ContactsList = styled.ul``\r\n\r\nexport const ContactItem = styled.li`\r\n  margin-bottom: 10px;\r\n  font-family: 'Comfortaa', cursive;\r\n  font-size: 16px;\r\n  color: #524f4e;\r\n  font-weight: 600;\r\n  margin-right: 15px;\r\n  margin-left: 15px;\r\n`\r\nexport const DeleteButton = styled.button`\r\n  float: right;\r\n  text-align: center;\r\n\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  padding-top: 3px;\r\n  padding-bottom: 1px;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 40px 40px #f137a6 inset, 0 0 0 0 #f137a6;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-weight: bold;\r\n  letter-spacing: 2px;\r\n  color: white;\r\n  transition: 0.15s ease-in-out;\r\n\r\n  border: none;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 10px 0 #f137a6 inset, 0 0 10px 4px #f137a6;\r\n    color: #f137a6;\r\n    background: #a4dada;\r\n  }\r\n`\r\n","import { ContactsList, ContactItem, DeleteButton } from './ContactsList.styled'\r\nimport { AiOutlineUser } from 'react-icons/ai'\r\nimport { FiX } from 'react-icons/fi'\r\n\r\nexport default function ContactsListSection({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ContactsList>\r\n      {contacts.map((contact) => (\r\n        <ContactItem key={contact.id}>\r\n          <AiOutlineUser /> {contact.name}: {contact.number}\r\n          <DeleteButton type='button' onClick={() => onDeleteContact(contact.id)}>\r\n            <FiX></FiX>\r\n          </DeleteButton>\r\n        </ContactItem>\r\n      ))}\r\n    </ContactsList>\r\n  )\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Label = styled.label`\r\n  font-family: 'Comfortaa', cursive;\r\n  font-size: 18px;\r\n  color: #fff;\r\n\r\n  // color: #524f4e;\r\n  color: #f137a6;\r\n  margin-right: 10px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0);\r\n  transition: 0.2s linear;\r\n\r\n  text-align: left;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  margin-top: 10px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  width: 400px;\r\n  padding: 15px;\r\n  border: 2px solid #eee;\r\n  border: 0;\r\n  border-bottom: 1px solid #eee;\r\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\r\n  border-radius: 10px;\r\n\r\n  &:focus {\r\n    border: 1px solid #f137a6;\r\n    box-shadow: 0 0 20px 4px #f137a6;\r\n    outline: none;\r\n  }\r\n`\r\n","import { Input, Label } from './Filter.styled'\r\nimport { FaSearch } from 'react-icons/fa'\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <Label>\r\n      <FaSearch /> Find contacts by name\r\n      <Input name=\"filter\" onChange={onChange} value={value}></Input>\r\n    </Label>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Title, SubTitle, Container } from './App.styled'\r\nimport ContactForm from '../Form/ContactForm'\r\nimport ContactsListSection from '../ContactsList/ContactsList'\r\nimport Filter from '../Filter/Filter'\r\nimport contactsData from '../Data/contactsData.json'\r\nimport shortid from 'shortid'\r\n\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(\r\n    () => JSON.parse(window.localStorage.getItem('contacts')) ?? contactsData,\r\n  )\r\n  const [filter, setFilter] = useState('')\r\n\r\n  const forSubmitHendler = (name, number) => {\r\n    const newContact = {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      number: number,\r\n    }\r\n\r\n    if (contacts.some((contact) => contact.name === name)) {\r\n      toast.error(`${name} is already in contact`)\r\n      return\r\n    }\r\n\r\n    setContacts((prevState) => [newContact, ...prevState])\r\n  }\r\n\r\n  const onChangeFilter = (event) => {\r\n    const value = event.target.value\r\n    setContacts(value)\r\n  }\r\n\r\n  const DeleteContact = (id) => {\r\n    setContacts((prevState) => prevState.filter((contact) => contact.id !== id))\r\n  }\r\n\r\n  const getFilterContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase()\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    )\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const contacts = window.localStorage.getItem('contacts')\r\n  //   const parseContacts = JSON.parse(contacts)\r\n\r\n  //    if (parseContacts) {\r\n  //     setContacts(parseContacts)\r\n  //   }\r\n\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts))\r\n  }, [contacts])\r\n\r\n  const filterContacts = getFilterContacts()\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Phonebook</Title>\r\n\r\n      <ContactForm onSubmit={forSubmitHendler}></ContactForm>\r\n\r\n      <SubTitle>Contacts</SubTitle>\r\n\r\n      <Filter value={filter} onChange={onChangeFilter} />\r\n\r\n      <ContactsListSection\r\n        contacts={filterContacts}\r\n        onDeleteContact={DeleteContact}\r\n      />\r\n\r\n      <ToastContainer />\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root'),\n// )\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}